{"version":3,"sources":["todo.js","user.js","Users.js","TodoItem.js","TodoList.js","App.js","index.js"],"names":["getTodos","fetch","then","responce","json","getUsers","response","Users","_ref","user","react_default","a","createElement","Fragment","username","propTypes","PropTypes","string","isRequired","TodoItem","todo","className","id","title","src_Users","TodoList","todos","map","src_TodoItem","App","state","usersWithTodos","isLoading","isStart","loadUsersAndTodos","_ref2","users","regenerator_default","async","_context","prev","next","_this","setState","awrap","Promise","all","sent","Object","slicedToArray","objectSpread2","find","userId","stop","_this2","this","_this$state","onClick","toConsumableArray","sort","b","localeCompare","type","src_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"wQAEaA,SAAW,kBAAMC,MAFlB,8CAGTC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,WCDhBC,EAAW,kBAAMJ,MAFlB,8CAGTC,KAAK,SAAAI,GAAQ,OAAIA,EAASF,iBCAvBG,EAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACZC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACGJ,EAAKK,WAIVP,EAAMQ,UAAY,CAAEN,YAAMO,EAAUC,OAAOC,YAC5BX,QCMAY,EAZE,SAAAX,GAAA,IAAGY,EAAHZ,EAAGY,KAAH,OACfV,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIS,UAAU,MAAMD,EAAKE,IACzBZ,EAAAC,EAAAC,cAAA,MAAIS,UAAU,MAAMD,EAAKG,OACzBb,EAAAC,EAAAC,cAAA,MAAIS,UAAU,MACZX,EAAAC,EAAAC,cAACY,EAAD,CAAOf,KAAMW,EAAKX,UCOTgB,EAZE,SAAAjB,GAAA,IAAGkB,EAAHlB,EAAGkB,MAAH,OACfhB,EAAAC,EAAAC,cAAA,SAAOS,UAAU,SACfX,EAAAC,EAAAC,cAAA,SAAOS,UAAU,SACdK,EAAMC,IAAI,SAAAP,GAAI,OACbV,EAAAC,EAAAC,cAACgB,EAAD,CAAUR,KAAMA,SC6DTS,6MA9DbC,MAAQ,CACNC,eAAgB,GAChBC,WAAW,EACXC,SAAS,KAGXC,kBAAoB,eAAA1B,EAAA2B,EAAAT,EAAAU,EAAA,OAAAC,EAAA1B,EAAA2B,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAClBC,EAAKC,SAAS,CACZX,WAAW,EACXC,SAAS,IAHOM,EAAAE,KAAA,EAAAJ,EAAA1B,EAAAiC,MAMWC,QAAQC,IAAI,CACvC9C,IACAK,OARgB,OAAAG,EAAA+B,EAAAQ,KAAAZ,EAAAa,OAAAC,EAAA,EAAAD,CAAAxC,EAAA,GAMXkB,EANWS,EAAA,GAMJC,EANID,EAAA,GAWlBO,EAAKC,SAAS,CACZX,WAAW,EACXD,eAAgBL,EAAMC,IAAI,SAAAP,GAAI,OAAA4B,OAAAE,EAAA,EAAAF,CAAA,GACzB5B,EADyB,CAE5BX,KAAM2B,EAAMe,KAAK,SAAA1C,GAAI,OAAIA,EAAKa,KAAOF,EAAKgC,eAf5B,wBAAAb,EAAAc,mFAoBX,IAAAC,EAAAC,KAAAC,EAC+BD,KAAKzB,MAAnCC,EADDyB,EACCzB,eAER,OAHOyB,EACiBxB,UAGftB,EAAAC,EAAAC,cAAA,uBAIPF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,OACbX,EAAAC,EAAAC,cAAA,mCACC2C,KAAKzB,MAAMG,QACVvB,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,UACE6C,QAAS,kBAAMH,EAAKX,SAAS,CAC3BZ,eAAgBiB,OAAAU,EAAA,EAAAV,CAAIjB,GACjB4B,KAAK,SAAChD,EAAGiD,GAAJ,OAAWjD,EAAEY,MAAOsC,cAAcD,EAAErC,YAE9CuC,KAAK,UALP,SAWFpD,EAAAC,EAAAC,cAAA,UACE6C,QAASF,KAAKrB,kBACd4B,KAAK,UAFP,QAOFpD,EAAAC,EAAAC,cAACmD,EAAD,CAAUrC,MAAOK,YAzDPiC,IAAMC,WCFxBC,IAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d317b84d.chunk.js","sourcesContent":["const URL = 'https://jsonplaceholder.typicode.com/todos';\n\nexport const getTodos = () => fetch(URL)\n  .then(responce => responce.json());\n","const URL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getUsers = () => fetch(URL)\n  .then(response => response.json());\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Users = ({ user }) => (\n  <>\n    {user.username}\n  </>\n);\n\nUsers.propTypes = { user: PropTypes.string.isRequired };\nexport default Users;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Users from './Users';\n\nconst TodoItem = ({ todo }) => (\n  <tr>\n    <td className=\"td\">{todo.id}</td>\n    <td className=\"td\">{todo.title}</td>\n    <td className=\"td\">\n      <Users user={todo.user} />\n    </td>\n  </tr>\n);\n\nTodoItem.propTypes = { todo: PropTypes.string.isRequired };\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos }) => (\n  <table className=\"table\">\n    <tbody className=\"tbody\">\n      {todos.map(todo => (\n        <TodoItem todo={todo} />\n      ))}\n    </tbody>\n  </table>\n\n);\n\nTodoList.propTypes = { todos: PropTypes.objectOf(PropTypes.any).isRequired };\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport { getTodos } from './todo';\nimport { getUsers } from './user';\nimport TodoList from './TodoList';\n\nclass App extends React.Component {\n  state = {\n    usersWithTodos: [],\n    isLoading: false,\n    isStart: false,\n  }\n\n  loadUsersAndTodos = async() => {\n    this.setState({\n      isLoading: true,\n      isStart: true,\n    });\n\n    const [todos, users] = await Promise.all([\n      getTodos(),\n      getUsers(),\n    ]);\n\n    this.setState({\n      isLoading: false,\n      usersWithTodos: todos.map(todo => ({\n        ...todo,\n        user: users.find(user => user.id === todo.userId),\n      })),\n    });\n  };\n\n  render() {\n    const { usersWithTodos, isLoading } = this.state;\n\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of todos</h1>\n        {this.state.isStart ? (\n          <section>\n            <button\n              onClick={() => this.setState({\n                usersWithTodos: [...usersWithTodos]\n                  .sort((a, b) => (a.title).localeCompare(b.title)),\n              })}\n              type=\"button\"\n            >\n              Sort\n            </button>\n          </section>\n        ) : (\n          <button\n            onClick={this.loadUsersAndTodos}\n            type=\"button\"\n          >\n              Load\n          </button>\n        )}\n        <TodoList todos={usersWithTodos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/* state = {\n    users: [],\n    todos: []\n  }\n\n  render() {\n    const { users, todos } = this.state;\n    const getTodosWithUsers = (todosArr, usersArr) => (\n      todosArr.map((todo) => {\n        const user = usersArr.find(person => person.id === todo.userId);\n\n        return { ...todo, user };\n      })\n    );\n    const preparedTodos = getTodosWithUsers(); */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}